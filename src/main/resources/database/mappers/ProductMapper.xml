<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.goodee.app.product.ProductDAO">
  
  <update id="commentUpdate" parameterType="ProductCommentDTO">
  	UPDATE COMMENTS SET BOARD_CONTENTS = #{board_contents}
		WHERE BOARD_NUM = #{board_num}
  </update>
  
  <delete id="commentDelete" parameterType="ProductCommentDTO">
  	DELETE FROM COMMENTS
 		WHERE BOARD_NUM = #{board_num} 
  </delete>
  
  <insert id="commentAdd" parameterType="ProductCommentDTO">
  	INSERT INTO COMMENTS
  	VALUES (PRODUCT_SEQ.NEXTVAL, #{board_contents}, #{board_writer}, #{product_num}, SYSDATE)
  </insert>
  
  
  <select id="commentTotalCount" resultType="Long" parameterType="ProductCommentPager">
  	SELECT COUNT(BOARD_NUM) FROM COMMENTS
  	WHERE PRODUCT_NUM=#{product_num}
  </select>
  
  <select id="commentList" resultType="ProductCommentDTO" parameterType="ProductCommentPager">
  	SELECT * FROM
  	(
  		SELECT ROWNUM R, C.* FROM
  		(
  			SELECT * FROM COMMENTS
  			WHERE PRODUCT_NUM=#{product_num}
  			ORDER BY BOARD_NUM DESC
  		)C
  	)
  	WHERE R BETWEEN #{startRow} AND #{lastRow}
  </select>
  
  	<select id="getList" resultType="ProductDTO" parameterType="com.goodee.app.util.Pager">
  		SELECT * FROM 
			(
				SELECT ROWNUM R, B.* FROM
				(
					SELECT * FROM PRODUCT_INFO
					<where>
						<choose>
							<when test="kind=='k2'">
								PRODUCT_EX LIKE '%'||#{search}||'%'
							</when>
							<otherwise>
								AND PRODUCT_NAME LIKE '%'||#{search}||'%'
							</otherwise>
						</choose>
					</where> 
					ORDER BY PRODUCT_NUM DESC) B)
					WHERE R	BETWEEN #{startRow} AND #{lastRow}
  	</select>
  	
  	<select id="getTotalCount" resultType="java.lang.Long" parameterType="com.goodee.app.util.Pager">
  		SELECT COUNT(PRODUCT_NUM) FROM PRODUCT_INFO
  		<where>
			<choose>
				<when test="kind=='k2'">
					PRODUCT_EX LIKE '%'||#{search}||'%'
				</when>
				<otherwise>
					AND PRODUCT_NAME LIKE '%'||#{search}||'%'
				</otherwise>
			</choose>
		</where> 
  	</select>

  	<select id="getDetail" resultMap="getDetailResult" parameterType="ProductDTO">
  		SELECT * FROM PRODUCT_INFO pi 
			LEFT JOIN
			PRODUCT_FILES pf 
			ON pi.PRODUCT_NUM = pf.PRODUCT_NUM
			WHERE pi.PRODUCT_NUM = #{product_num}
  	</select>
  	
  	<resultMap type="ProductDTO" id="getDetailResult">
  		<id column="PRODUCT_NUM" property="product_num" />
  		<result column="PRODUCT_NAME" property="product_name"/>
  		<result column="PRODUCT_RATE" property="product_rate"/>
  		<result column="PRODUCT_EX" property="product_ex"/>
  		<collection property="fileDTOs" javaType="java.util.List" ofType="ProductFileDTO">
  			<id column="FILE_NUM" property="file_num"/>
  			<result column="FILE_NAME" property="file_name"/>
  			<result column="ORI_NAME" property="ori_name"/>
  		</collection>
  	</resultMap>
  	
  	<!-- file업로드 추가 이후 여기도 수정이 됐음 -->
  	<insert id="add" parameterType="ProductDTO">
  		INSERT INTO PRODUCT_INFO VALUES (#{product_num},#{product_name},#{product_rate},#{product_ex})
  	</insert>
  	
  	<delete id="delete" parameterType="ProductDTO">
  		DELETE PRODUCT_INFO WHERE PRODUCT_NUM =#{product_num}
  	</delete>
  	
  	<update id="update" parameterType="ProductDTO">
  		UPDATE PRODUCT_INFO SET PRODUCT_NAME =#{product_name}, PRODUCT_RATE =#{product_rate}, PRODUCT_EX =#{product_ex}
  		WHERE PRODUCT_NUM = #{product_num}
  	</update>
  	
   	<!-- File Table에 집어넣을 insert쿼리문 -->
   	<select id="getNum" resultType="Long">
   		SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
   	</select>
   	
  	<insert id="addFile" parameterType="ProductFileDTO">
  		INSERT INTO
  		PRODUCT_FILES (FILE_NUM, PRODUCT_NUM, FILE_NAME, ORI_NAME)
		VALUES (FILES_SEQ.NEXTVAL, #{product_num}, #{file_name}, #{ori_name})
  	</insert>
  	
  	<!-- 위시리스트에 상품 추가 -->
  	<insert id="addWish" parameterType="java.util.Map">
  		INSERT INTO
  		WISHLIST
  		VALUES (#{product_num}, #{user_id})
  	</insert>
  	
  	<!-- 로그인한 회원의 위시리스트 목록 보기 -->
  	<select id="wishList" parameterType="MemberDTO" resultType="ProductDTO">
  		SELECT * FROM PRODUCT_INFO
		WHERE PRODUCT_NUM IN (
		(SELECT PRODUCT_NUM
		FROM WISHLIST 
		WHERE USER_ID = #{user_id}))
  	</select>
  	
  	<delete id="deleteWishList" parameterType="java.util.Map">
  		DELETE WISHLIST
 			WHERE USER_ID = #{user_id} AND
 			PRODUCT_NUM IN
 			<foreach collection="numbers" item="item" open="(" separator="," close=")">
 				#{item}
 			</foreach>
  	</delete>
  	
  	
 
  </mapper>