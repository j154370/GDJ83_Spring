<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.goodee.app.member.MemberDAO">
  	
  	<insert id="join" parameterType="MemberDTO">
  		INSERT INTO MEMBER_INFO (USER_ID, USER_NAME, USER_PHONE, USER_PW, USER_EMAIL, USER_ADDRESS)
		VALUES (#{user_id}, #{user_name}, #{user_phone}, #{user_pw}, #{user_email}, #{user_address})
  	</insert>
  	
  	<select id="login" parameterType="MemberDTO" resultType="MemberDTO">
  		SELECT USER_ID, USER_PW, USER_NAME FROM MEMBER_INFO
  		WHERE USER_ID = #{user_id}
  	</select>
  	
  	<select id="detail" parameterType="MemberDTO" resultMap="loginResult">
  		SELECT * FROM MEMBER_INFO mi 
			LEFT JOIN
			ACCOUNT_INFO ai 
			ON mi.USER_ID = ai.USER_ID
			LEFT JOIN
			MEMBER_FILES mf
			ON mi.USER_ID = mf.USER_ID
			WHERE mi.USER_ID = #{user_id}
  	</select>
  	
  	<resultMap type="MemberDTO" id="loginResult">
  		<!-- primary key 용도 -->
  		<id column="USER_ID" property="user_id"/>
  		<!-- 	column = "컬럼 명", property = "setter의 이름 -->
  		<result column="USER_NAME" property="user_name"/>
  		<result column="USER_PHONE" property="user_phone"/>
  		<result column="USER_PW" property="user_pw"/>
  		<result column="USER_EMAIL" property="user_email"/>
  		<result column="USER_ADDRESS" property="user_address"/>
  		<!-- 1대 1 관계를 먼저 쓰고 그 다음에 1대 N의 관계가 나와야 한다 -->
  		<association property="memberFileDTO" javaType="MemberFileDTO">
  			<id column="FILE_NUM" property="file_num" />
  			<result column="FILE_NAME" property="file_name" />
  			<result column="ORI_NAME" property="ori_name" />
  		</association>
  		<!-- 1 : N의 관계 -->
  		<collection property="dtos" javaType="java.util.List" ofType="AccountDTO">
  			<id column ="ACCOUNT_NUM" property="account_num" />
  			<result column="PRODUCT_NUM" property="product_num" />
  			<result column="BALANCE" property="balance" />
  			<result column="ACCOUNT_DATE" property="account_date" />
  		</collection>
  	</resultMap>
  	
  	<update id="update" parameterType="MemberDTO">
  		UPDATE MEMBER_INFO SET USER_NAME =#{user_name}, USER_PHONE =#{user_phone}, USER_EMAIL =#{user_email},
  		USER_ADDRESS = #{user_address}
  		WHERE USER_ID = #{user_id}
  	</update>
  	
  	<delete id="delete" parameterType="MemberDTO">
  		DELETE MEMBER_INFO WHERE USER_ID =#{user_id}
  	</delete>
  	
  	<!-- File Table에 집어넣을 insert쿼리문 -->
  	
  	<insert id="addFile" parameterType="MemberFileDTO">
  		INSERT INTO
  		MEMBER_FILES (FILE_NUM, USER_ID, FILE_NAME, ORI_NAME)
		VALUES (FILES_SEQ.NEXTVAL, #{user_id}, #{file_name}, #{ori_name})
  	</insert>
 
  </mapper>